{"version":3,"sources":["utils/axios.js","components/Account/ConfirmDialog.js","components/Account/Account.js","utils/axiosFns.js","UseAvatar.js","components/Posts/NewPostForm.js","components/Comments/CommentEditForm.js","components/Comments/Comment.js","components/Comments/NewCommentForm.js","components/Comments/CommentContainer.js","components/Posts/EditPostForm.js","components/Posts/Post.js","components/Posts/PostContainer.js","components/Friends/FriendList.js","LinkList.js","components/Dashboard/Dashboard.js","components/Friends/FriendCard.js","components/Friends/FriendRequestCard.js","components/UserSearch/UserSearch.js","components/Friends/Friends.js","components/Login/Registration.js","components/Login/Facebook.js","components/Login/LoginForm.js","components/Login/Login.js","components/NavBar/NavBar.js","components/Profile/FriendButtons.js","components/Profile/UserInfo.js","components/Profile/EditProfileForm.js","components/Profile/EditProfilePicForm.js","components/Profile/Profile.js","useLocalStorage.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","ConfirmDialog","dialogOpen","toggleDialog","handleDelete","Dialog","sx","backgroundColor","open","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","variant","color","Account","user","setUser","useState","initials","setInitials","setDialogOpen","navigate","useNavigate","useEffect","first_name","last_name","Container","maxWidth","minHeight","marginTop","Grid","container","spacing","justifyContent","item","xs","md","Paper","textAlign","margin","Typography","Box","borderRadius","height","width","border","marginBottom","marginLeft","marginRight","Avatar","alt","src","profile_pic","delete","FormData","require","sortPosts","arr","sort","a","b","Date","post_timestamp","axiosFns","posts","setPosts","skip","setLoadingPosts","setUserFriends","userFriends","friendRequests","setFriendRequests","getPosts","get","data","then","results","handlePostSend","postTitle","postContent","imageFile","formData","append","post","post_title","post_content","res","updatedPosts","handlePostEdit","postId","targetPost","updatedPost","post_likes","post_comments","post_img","handleCommentEdit","commentId","commentContent","targetComment","updatedComment","comment_content","related_post","comment_likes","handleLikePost","put","findIndex","_id","includes","filter","push","handlePostDelete","filteredPosts","p","handleCommentSend","handleCommentDelete","handleLikeComment","c","handleAcceptRequest","target_userId","friend_list","updatedFriendReqs","friendReq","handleDenyRequest","UseAvatar","NewPostForm","setPostTitle","setPostContent","showImgForm","setShowImgForm","setImageFile","imgPreview","setImgPreview","handleKeyPress","e","key","handleSubmit","toggleImgForm","m","paddingTop","TextField","fullWidth","display","placeholder","onKeyPress","onChange","target","value","multiline","rows","type","position","startIcon","size","files","URL","createObjectURL","handleImgChange","name","CommentEditForm","setCommentContent","event","Comment","comment","showEditForm","setShowEditForm","flexDirection","comment_author","formatDistance","comment_timestamp","addSuffix","IconButton","fontSize","length","NewCommentForm","CommentContainer","showCommentForm","map","EditPostForm","Post","setShowCommentForm","post_author","PostContainer","handleScroll","loading","onScroll","FriendList","friends","friendReqs","handleAvatarClick","List","subheader","ListSubheader","sender","ListItem","secondaryAction","ListItemAvatar","ListItemText","primary","Divider","fren","LinkList","ListItemIcon","Dashboard","loadingPosts","setSkip","friend_req_rec","catch","err","response","scrollHeight","scrollTop","clientHeight","FriendCard","friend","Card","alignItems","paddingLeft","CardContent","flexWrap","CardActions","UserSearch","queryStr","setQueryStr","usersList","setUsersList","error","setError","users","label","queryArr","split","userQuery1","userQuery2","setTimeout","Friends","FriendRequestCard","Registration","props","firstName","setFirstName","lastName","setLastName","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","phoneNumber","setPhoneNumber","email","setEmail","component","mobile","laptop","noValidate","autoComplete","required","InputLabelProps","shrink","Stack","direction","handleRegistration","Facebook","handleFBLogin","style","alignSelf","appId","process","FACEBOOK_APP_ID","autoLoad","fields","callback","accessToken","render","renderProps","theme","createTheme","LoginForm","handleClick","handleLogin","ThemeProvider","er","msg","Login","errors","setErr","registerErrors","setRegErrors","phone_number","token","defaults","headers","common","message","facebookId","confirm_password","console","log","NavBar","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","handleCloseNavMenu","handleCloseUserMenu","handleLogoClick","AppBar","Toolbar","disableGutters","noWrap","mr","flexGrow","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","MenuItem","Tooltip","title","mt","FriendButtons","friendsArr","friendReqSent","loggedUser","handleFriendReq","friendReqRec","acceptFriendReq","denyFriendReq","UserInfo","toggleEditProfile","toggleEditImage","setFriendsArr","setFriendReqSent","setFriendReqRec","filteredFriendsArr","loggedUserFriendsReqRec","loggedFriendReqSent","friend_req_sent","goBack","ValidateSchema","Yup","max","EditProfileForm","handleProfileUpdate","initialValues","validationSchema","onSubmit","values","formik","getFieldProps","Formik","EditProfilePicForm","handleProfilePicUpdate","profilePic","setProfilePic","handleChange","Profile","relUser","setRelUser","profileEditing","setProfileEditing","imageEditing","setImageEditing","userId","useParams","status","info","updatedUser","targetUserId","useLocalStorage","window","localStorage","getItem","JSON","parse","storedValue","setStoredValue","toStore","Function","setItem","stringify","Copyright","align","config","App","exact","path","element","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.8b22139d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// Set config defaults when creating the instance, to update accordingly\r\nconst instance = axios.create({\r\n  //backend server route\r\n  baseURL: \"https://odin-book-backend.herokuapp.com/\",\r\n  \r\n  // for testing purposes\r\n  // baseURL: \"http://localhost:5000\"\r\n});\r\n\r\nexport default instance;","import React from \"react\";\r\n\r\n// mui setup\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\n\r\nconst ConfirmDialog = ({dialogOpen, toggleDialog, handleDelete}) => {\r\n    return (\r\n        <Dialog\r\n            sx={{backgroundColor: 'rgb(23, 24, 25)'}}\r\n            open={dialogOpen}\r\n            onClose={toggleDialog}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                Delete account\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Are you sure you want to delete your OdinBook account?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleDelete} variant=\"contained\" color=\"error\">\r\n                    Delete\r\n                </Button>\r\n                <Button onClick={toggleDialog} variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default ConfirmDialog;","import Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Typography } from \"@mui/material\";\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"../../utils/axios\";\r\nimport ConfirmDialog from \"./ConfirmDialog\";;\r\n\r\n\r\nconst Account = ({user, setUser}) => {\r\n    const [initials, setInitials] = useState('');\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setInitials(`${user.first_name[0]} ${user.last_name[0]}`);\r\n        }\r\n    }, [user]);\r\n\r\n    const toggleDialog = () => {\r\n        setDialogOpen(!dialogOpen);\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        setDialogOpen(false);\r\n        setUser('');\r\n        navigate('/login');\r\n        axios.delete(`/users/${user.id}`);\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"x1\" sx={{minHeight: '100vh', marginTop: '10px'}}>\r\n            <Grid container spacing={2} sx={{justifyContent: 'center'}}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Paper sx={{textAlign: 'center', margin: '0 5px 20px 5px'}}>\r\n                        <Typography variant=\"h5\">\r\n                            My Account\r\n                        </Typography>\r\n                        <Box sx={{borderRadius: '50%', \r\n                                height: '150px', \r\n                                width: '150px', \r\n                                border: '1px solid black', \r\n                                marginBottom: 20,\r\n                                marginTop: 5, \r\n                                marginLeft: 'auto',\r\n                                marginRight: 'auto',}}>\r\n                            <Avatar\r\n                                alt={`${user.first_name} ${user.last_name}`}\r\n                                src={user.profile_pic ? user.profile_pic : ''}\r\n                                sx={{height: '150px', width: '150px'}}\r\n                            >\r\n                                {user.profile_pic ? null : initials}\r\n                            </Avatar>\r\n                        </Box>\r\n                        <Button variant=\"contained\" onClick={toggleDialog} sx={{marginBottom: '10px'}}>\r\n                            Delete account\r\n                        </Button>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            <ConfirmDialog \r\n                dialogOpen={dialogOpen}\r\n                toggleDialog={toggleDialog}\r\n                handleDelete={handleDelete}\r\n            />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Account;","import axios from \"./axios\";\r\nconst FormData = require('form-data');\r\n\r\nconst sortPosts = (arr) => {\r\n    const sorted = arr.sort((a, b) =>\r\n        new Date(b.post_timestamp) - new Date(a.post_timestamp)\r\n    );\r\n    return sorted;\r\n};\r\n\r\nconst axiosFns = ({\r\n    posts,\r\n    setPosts,\r\n    user,\r\n    skip,\r\n    setLoadingPosts,\r\n    userFriends,\r\n    setUserFriends,\r\n    friendRequests,\r\n    setFriendRequests,\r\n}) => {\r\n\r\n        const getPosts = () => {\r\n            if (skip === 0) {\r\n                // when skip === 0, sets the GET results as the posts array \r\n                setLoadingPosts(true);\r\n                axios\r\n                .get(`/posts/?skip=${skip}`, { data: { skip: skip } })\r\n                .then((results) => {\r\n                    setPosts(sortPosts([...results.data.posts]));\r\n                    if (skip === 0) {\r\n                        setLoadingPosts(false);\r\n                    };\r\n                });\r\n            } else {\r\n                // when skip !== 0, appends the GET results (after skip) to the old posts array\r\n                axios\r\n                .get(`/posts/?skip=${skip}`, { data: { skip: skip } })\r\n                .then((results) => {\r\n                setPosts(sortPosts([...posts, ...results.data.posts]));\r\n                if (skip === 0) {\r\n                    setLoadingPosts(false);\r\n                };\r\n            });\r\n            }\r\n        };\r\n\r\n        const handlePostSend = async (postTitle, postContent, imageFile) => {\r\n            if (imageFile) {\r\n                const formData = new FormData();\r\n                formData.append('post_img', imageFile);\r\n                const res = await axios.post('/posts/', formData, {post_title: postTitle, post_content: postContent});\r\n                const updatedPosts = [...posts, res.data.post];\r\n                setPosts(sortPosts(updatedPosts));\r\n            } else {\r\n                axios\r\n                .post('/posts/', {post_title: postTitle, post_content: postContent})\r\n                .then((results) => {\r\n                    const updatedPosts = [...posts, results.data.post];\r\n                    setPosts(sortPosts(updatedPosts));\r\n                });\r\n            };\r\n        };\r\n\r\n        const handlePostEdit = async (postId, postTitle, postContent, imageFile) => {\r\n            const targetPost = await axios.get(`/posts/${postId}`);\r\n            // constructing the req.body so that it includes the older posts' post_like, post_comments & post_img\r\n            const updatedPost = {\r\n                post_title: postTitle,\r\n                post_content: postContent,\r\n                post_likes: targetPost.post_likes,\r\n                post_comments: targetPost.post_comments,\r\n                post_img: targetPost.post_img,\r\n            };\r\n            if (imageFile) {\r\n                const formData = new FormData();\r\n                formData.append('post_img', imageFile);\r\n                const res = await axios.post(`/posts/${postId}`, formData, updatedPost);\r\n                const updatedPosts = [...posts, res.data.post];\r\n                setPosts(sortPosts(updatedPosts));\r\n            } else {\r\n                axios.post(`/posts/${postId}`, updatedPost)\r\n                .then((results) => {\r\n                    const updatedPosts = [...posts, results.data.post];\r\n                    setPosts(sortPosts(updatedPosts));\r\n                });\r\n            };\r\n        };\r\n\r\n        const handleLikePost = (postId) => {\r\n            axios\r\n            .put(`/posts/${postId}/like`)\r\n            .then((results) => {\r\n                const updatedPosts = [...posts];\r\n                const targetPost = updatedPosts.findIndex((post) => post._id === postId);\r\n                // if the user has not previously liked the post\r\n                if (!updatedPosts[targetPost].post_likes.includes(user.id)) {\r\n                    updatedPosts[targetPost].post_likes.push(user.id);\r\n                } else {\r\n                    // the user has previously liked the post but changed their minds and wants to un-like it\r\n                    updatedPosts[targetPost].post_likes = updatedPosts[targetPost].post_likes.filter((id) => \r\n                        id !== user.id\r\n                    );\r\n                }\r\n                setPosts(sortPosts(updatedPosts));\r\n            });\r\n        };\r\n\r\n        const handlePostDelete = (postId) => {\r\n            axios\r\n            .delete(`/posts/${postId}`)\r\n            .then((results) => {\r\n                const oldPosts = [...posts];\r\n                const filteredPosts = oldPosts.filter((p) => p._id !== postId);\r\n                setPosts(sortPosts(filteredPosts));\r\n            });\r\n        };\r\n\r\n        const handleCommentSend = (postId, commentContent) => {\r\n            axios\r\n            .post(`/posts/${postId}/comments`, {comment_content:commentContent})\r\n            .then((results) => {\r\n                /*\r\n                const updatedPosts = [...posts];\r\n                const targetPost = updatedPosts.findIndex((post) => post._id === postId);\r\n                updatedPosts[targetPost].post_comments = [...updatedPosts[targetPost].post_comments, results.data.comment];\r\n                setPosts(sortPosts(updatedPosts));\r\n                */\r\n                getPosts();\r\n            });\r\n        };\r\n\r\n        const handleCommentEdit = async (postId, commentId, commentContent) => {\r\n            const targetComment = await axios.get(`/posts/${postId}/comments/${commentId}`);\r\n            // constructing the req.body so that it includes the older comments' related_post & comment_likes\r\n            const updatedComment = {\r\n                comment_content: commentContent,\r\n                related_post: targetComment.related_post,\r\n                comment_likes: targetComment.comment_likes,\r\n            };\r\n            axios.post(`/posts/${postId}/comments/${commentId}`, updatedComment)\r\n            .then((results) => {\r\n                /*\r\n                const updatedPosts = [...posts];\r\n                const targetPost = updatedPosts.findIndex((post) => post._id === postId);\r\n                updatedPosts[targetPost].post_comments = [...updatedPosts[targetPost].post_comments, results.data.comment];\r\n                setPosts(sortPosts(updatedPosts));\r\n                */\r\n                getPosts();\r\n            });\r\n        };\r\n\r\n        const handleCommentDelete = (postId, commentId) => {\r\n            axios\r\n            .delete(`/posts/${postId}/comments/${commentId}`)\r\n            .then((results) => {\r\n                /*\r\n                const updatedPosts = [...posts];\r\n                const targetPost = updatedPosts.findIndex((post) => post._id === postId);\r\n                updatedPosts[targetPost].post_comments.filter((c) => c._id !== commentId);\r\n                setPosts(sortPosts(updatedPosts));\r\n                */\r\n                getPosts();\r\n            });\r\n        };\r\n\r\n        const handleLikeComment = (postId, commentId) => {\r\n            axios\r\n            .put(`/posts/${postId}/comments/${commentId}/like`)\r\n            .then((results) => {\r\n                const updatedPosts = [...posts];\r\n                const targetPost = updatedPosts.findIndex((post) => post._id === postId);\r\n                const targetComment = updatedPosts[targetPost].post_comments.findIndex((c) => c._id === commentId);\r\n                // if the user has not previously liked the comment\r\n                if (!updatedPosts[targetPost].post_comments[targetComment].comment_likes.includes(user.id)) {\r\n                    updatedPosts[targetPost].post_comments[targetComment].comment_likes.push(user.id);\r\n                } else {\r\n                    // user has previously liked the comment and is now un-liking it\r\n                    updatedPosts[targetPost].post_comments[targetComment].comment_likes =\r\n                    updatedPosts[targetPost].post_comments[targetComment].comment_likes.filter((id) => \r\n                        id !== user.id\r\n                    );\r\n                };\r\n                setPosts(sortPosts(updatedPosts));\r\n            });\r\n        };\r\n\r\n        const handleAcceptRequest = (id) => {\r\n            axios\r\n            .put(`/users/accept`, {target_userId: id})\r\n            .then((results) => {\r\n                setUserFriends(results.data.user.friend_list);\r\n                // removing the request from friendRequests\r\n                const updatedFriendReqs = friendRequests.filter((friendReq) => \r\n                    friendReq._id !== id\r\n                );\r\n                setFriendRequests(updatedFriendReqs);\r\n            });\r\n        };\r\n\r\n        const handleDenyRequest = (id) => {\r\n            axios\r\n            .delete(`/users/deny`, {data: {target_userId: id}})\r\n            .then((results) => {\r\n                const updatedFriendReqs = friendRequests.filter((friendReq) => \r\n                    friendReq._id !== id\r\n                );\r\n                setFriendRequests(updatedFriendReqs);\r\n            });\r\n        };\r\n\r\n        return {\r\n            getPosts,\r\n            handlePostSend,\r\n            handlePostEdit,\r\n            handleLikePost,\r\n            handlePostDelete,\r\n            handleCommentSend,\r\n            handleCommentEdit,\r\n            handleCommentDelete,\r\n            handleLikeComment,\r\n            handleAcceptRequest,\r\n            handleDenyRequest\r\n        };\r\n};\r\n\r\nexport default axiosFns;","import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// mui setup\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nconst UseAvatar = ({user}) => {\r\n    const [initials, setInitials] = useState('');\r\n    // const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setInitials(`${user.first_name[0]} ${user.last_name[0]}`);\r\n        }\r\n    }, [user]);\r\n\r\n    /* not used\r\n    const handleAvatarClick = () => {\r\n        navigate(`/users/${user._id}`);\r\n    }\r\n    */\r\n\r\n    return (\r\n        <Avatar\r\n            alt={`${user.first_name} ${user.last_name}`}\r\n            src={user.profile_pic ? user.profile_pic : ''}\r\n        >\r\n            {user.profile_pic ? null : initials}\r\n        </Avatar>\r\n    );\r\n};\r\n\r\nexport default UseAvatar;","import React, { useState } from \"react\";\r\nimport UseAvatar from '../../UseAvatar';\r\n\r\n// mui setup\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport InsertPhotoIcon from '@mui/icons-material/InsertPhoto';\r\nimport Box from '@mui/system/Box';\r\n\r\nvar async = require(\"async\");\r\n\r\nconst NewPostForm = ({user, handlePostSend, getPosts}) => {\r\n    const [postTitle, setPostTitle] = useState('');\r\n    const [postContent, setPostContent] = useState('');\r\n    const [showImgForm, setShowImgForm] = useState(false);\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [imgPreview, setImgPreview] = useState(null);\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleSubmit();\r\n        };\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        await handlePostSend(postTitle, postContent, imageFile);\r\n        setPostContent('');\r\n        setPostTitle('');\r\n        setShowImgForm(false);\r\n        setImageFile(null);\r\n        setImgPreview(null);\r\n        getPosts();\r\n    };\r\n\r\n    const toggleImgForm = () => {\r\n        setShowImgForm(!showImgForm);\r\n    }\r\n\r\n    const handleImgChange = (e) => {\r\n        setImageFile(e.target.files[0]);\r\n        setImgPreview(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setImageFile(null);\r\n        setImgPreview(null);\r\n        toggleImgForm();\r\n    }\r\n\r\n    if (!user) {\r\n        return (\r\n            <div>\r\n                Loading...\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Box sx={{marginBottom: '8px', minHeight: '25vh', '& .MuiTextField-root': { m: 1, width: '97%', maxWidth: '100%'}}}>\r\n            <Box sx={{margin: '0px 8px 0px 8px', paddingTop: '8px'}}>\r\n                <UseAvatar user={user}/>\r\n                <TextField \r\n                    fullWidth\r\n                    sx={{display: 'block', marginTop: '2px'}}\r\n                    id=\"outlined-multiline-static\"\r\n                    placeholder=\"Post title here\"\r\n                    onKeyPress={handleKeyPress}\r\n                    onChange={(e) => setPostTitle(e.target.value)}\r\n                    value={postTitle}\r\n                />\r\n                <TextField \r\n                    fullWidth\r\n                    sx={{display: 'block', marginBottom: '2px'}}\r\n                    id=\"outlined-multiline-static\"\r\n                    multiline\r\n                    rows={2}\r\n                    placeholder=\"Enter your post here\"\r\n                    onKeyPress={handleKeyPress}\r\n                    onChange={(e) => setPostContent(e.target.value)}\r\n                    value={postContent}\r\n                />    \r\n                \r\n                {showImgForm ? (\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        type=\"reset\"\r\n                        onClick={handleCancel}\r\n                    >\r\n                        Cancel adding image\r\n                    </Button>\r\n                ) : (\r\n                    <Button\r\n                        sx={{margin: '8px', position: 'relative'}}\r\n                        variant=\"contained\"\r\n                        startIcon={<InsertPhotoIcon />}\r\n                        onClick={toggleImgForm}\r\n                        size=\"small\"\r\n                    >\r\n                        Add image\r\n                    </Button>\r\n                )}\r\n            </Box>\r\n\r\n            <Box>\r\n                {showImgForm ? (\r\n                    <div>\r\n                        {imgPreview ? (\r\n                            <div>\r\n                                <img src={imgPreview} width=\"100%\" alt=\"Preview\" />\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <TextField\r\n                                    variant='standard'\r\n                                    type='file'\r\n                                    onChange={(e) => handleImgChange(e)}\r\n                                    name=\"post_img\"\r\n                                    id=\"post_img\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                        <Button\r\n                            sx={{margin: '8px', position: 'relative'}}\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                ) : null}\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default NewPostForm;","import React, { useState } from \"react\";\r\n\r\n// mui setup\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\n\r\nvar async = require('async');\r\n\r\nconst CommentEditForm = ({user, postId, targetComment, handleCommentEdit, getPosts}) => {\r\n    const [commentContent, setCommentContent] = useState(targetComment.comment_content);\r\n\r\n    const handleKeyPress = async (event) => {\r\n        if (event.key === 'Enter') {\r\n            await handleCommentEdit(postId, targetComment._id, commentContent);\r\n            setCommentContent('');\r\n            // getPosts('');\r\n        };\r\n    };\r\n\r\n    if (!user) {\r\n        return (\r\n            <div>\r\n                Loading...\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Box sx={{\r\n            margin: '8px', \r\n            width: '90%', \r\n            maxWidth: '100%', \r\n        }}>\r\n            <TextField \r\n                fullWidth\r\n                variant='outlined'\r\n                placeholder=\"Enter you comment here\"\r\n                onKeyPress={handleKeyPress}\r\n                onChange={(e) => setCommentContent(e.target.value)}\r\n                value={commentContent}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default CommentEditForm;","import React, { useState } from \"react\";\r\nimport UseAvatar from \"../../UseAvatar\";\r\nimport CommentEditForm from \"./CommentEditForm\";\r\nimport { formatDistance } from \"date-fns\";\r\n\r\n// mui setup\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { Typography } from \"@mui/material\";\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\nimport Box from '@mui/material/Box';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nconst Comment = ({user, comment, handleLikeComment, handleCommentEdit, handleCommentDelete, postId, getPosts}) => {\r\n    const [showEditForm, setShowEditForm] = useState(false);\r\n\r\n    const toggleShowEdit = () => {\r\n        setShowEditForm(!showEditForm);\r\n    }\r\n\r\n    return (\r\n        <Box sx={{width: '100%', display: 'flex', flexDirection: 'column', margin: '8px', paddingTop: '8px'}}>\r\n            <Box sx={{display: 'flex', flexDirection: 'row', justifyContent: 'flex-start'}}>\r\n                <UseAvatar user={comment.comment_author}/>\r\n\r\n                <Box sx={{flexDirection: 'column', marginLeft: '8px'}}>\r\n                    <Typography variant=\"body2\">\r\n                        {comment.comment_author.first_name} {comment.comment_author.last_name}\r\n                    </Typography>  \r\n                    <Typography variant=\"caption\">\r\n                        {formatDistance(new Date(comment.comment_timestamp), new Date(), {\r\n                            addSuffix: true,\r\n                        })}\r\n                    </Typography>\r\n                </Box>\r\n\r\n            {user.id === comment.comment_author._id && \r\n                <div>\r\n                    {showEditForm ? (\r\n                        <Box>\r\n                            <CommentEditForm \r\n                                user={user}\r\n                                postId={comment.related_post}\r\n                                targetComment={comment}\r\n                                handleCommentEdit={handleCommentEdit}\r\n                                getPosts={getPosts}\r\n                            />\r\n                        </Box>\r\n                    ) : (\r\n                        <Box sx={{marginLeft: '57vh', display: 'inline'}}>\r\n                            <IconButton\r\n                                aria-label=\"Edit comment\"\r\n                                onClick={toggleShowEdit}\r\n                            >\r\n                                <EditIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                            <IconButton\r\n                                aria-label=\"Delete comment\"\r\n                                onClick={() => handleCommentDelete(postId, comment._id)}\r\n                            >\r\n                                <DeleteIcon fontSize=\"small\" />\r\n                            </IconButton>\r\n                         </Box>\r\n                    )}\r\n                </div>\r\n            }\r\n            </Box>\r\n            \r\n            <Typography variant=\"body2\">\r\n                {comment.comment_content}\r\n            </Typography>\r\n\r\n            <Box>\r\n                <Typography variant=\"body2\">\r\n                    {comment.comment_likes.length === 1 ? '1 like' : `${comment.comment_likes.length} likes`}\r\n                </Typography>\r\n                <IconButton\r\n                    aria-label=\"like comment\"\r\n                    size=\"small\"\r\n                    onClick={() => handleLikeComment(postId, comment._id)}    \r\n                >\r\n                    <ThumbUpIcon fontSize=\"inherit\"/>\r\n                </IconButton>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Comment;","import React, { useState } from \"react\";\r\nimport UseAvatar from \"../../UseAvatar\";\r\n\r\n// mui setup\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\n\r\nvar async = require('async');\r\n\r\nconst NewCommentForm = ({postId, user, handleCommentSend, getPosts}) => {\r\n    const [commentContent, setCommentContent] = useState('');\r\n\r\n    const handleKeyPress = async (event) => {\r\n        if (event.key === 'Enter') {\r\n            await handleCommentSend(postId, commentContent);\r\n            setCommentContent('');\r\n            // getPosts('');\r\n        };\r\n    };\r\n\r\n    if (!user) {\r\n        return (\r\n            <div>\r\n                Loading...\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Box sx={{\r\n            margin: '8px', \r\n            width: '90%', \r\n            maxWidth: '100%', \r\n            display: 'flex', \r\n            flexDirection: 'row', \r\n            justifyContent: 'flex-start',\r\n            }}>\r\n            <UseAvatar user={user}/>\r\n            <TextField \r\n                sx={{marginLeft: '8px'}}\r\n                fullWidth\r\n                variant='outlined'\r\n                placeholder=\"Enter you comment here\"\r\n                onKeyPress={handleKeyPress}\r\n                onChange={(e) => setCommentContent(e.target.value)}\r\n                value={commentContent}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default NewCommentForm;","import React from \"react\";\r\nimport Comment from \"./Comment\";\r\nimport NewCommentForm from \"./NewCommentForm\";\r\n\r\nconst CommentContainer = ({\r\n    post,\r\n    showCommentForm,\r\n    user,\r\n    handleCommentSend,\r\n    handleCommentEdit,\r\n    handleCommentDelete,\r\n    handleLikeComment,\r\n    getPosts,\r\n}) => {\r\n    return (\r\n        <div>\r\n            {post.post_comments.map((comment) => {\r\n                return (\r\n                    <div key={comment._id}>\r\n                        <Comment \r\n                            user={user}\r\n                            comment={comment}\r\n                            handleLikeComment={handleLikeComment}\r\n                            handleCommentEdit={handleCommentEdit}\r\n                            handleCommentDelete={handleCommentDelete}\r\n                            postId={post._id}\r\n                            getPosts={getPosts}\r\n                        />\r\n                    </div>\r\n                )\r\n            })}\r\n            {showCommentForm ? (\r\n                <NewCommentForm \r\n                    user={user}\r\n                    handleCommentSend={handleCommentSend}\r\n                    postId={post._id}\r\n                    getPosts={getPosts}\r\n                />\r\n            ) : null}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CommentContainer","import React, { useState } from \"react\";\r\n\r\n// mui setup\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport InsertPhotoIcon from '@mui/icons-material/InsertPhoto';\r\nimport Box from '@mui/material/Box';\r\n\r\nvar async = require(\"async\");\r\n\r\nconst EditPostForm = ({user, targetPost, handlePostEdit, getPosts}) => {\r\n    const [postTitle, setPostTitle] = useState(targetPost.post_title);\r\n    const [postContent, setPostContent] = useState(targetPost.post_content);\r\n    const [showImgForm, setShowImgForm] = useState(false);\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [imgPreview, setImgPreview] = useState(targetPost.post_img);\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            handleSubmit();\r\n        };\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        await handlePostEdit(targetPost._id, postTitle, postContent, imageFile);\r\n        setPostContent('');\r\n        setPostTitle('');\r\n        setShowImgForm(false);\r\n        setImageFile(null);\r\n        setImgPreview(null);\r\n        getPosts();\r\n    }\r\n\r\n    const toggleImgForm = () => {\r\n        setShowImgForm(!showImgForm);\r\n    }\r\n\r\n    const handleImgChange = (e) => {\r\n        setImageFile(e.target.files[0]);\r\n        setImgPreview(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setImageFile(null);\r\n        setImgPreview(null);\r\n    }\r\n\r\n    if (!user) {\r\n        return (\r\n            <div>\r\n                Loading...\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Box sx={{marginBottom: '8px', minHeight: '25vh', '& .MuiTextField-root': { m: 1, width: '97%', maxWidth: '100%'}}}>\r\n            <Box sx={{margin: '0px 8px 0px 8px', paddingTop: '8px'}}>\r\n                <TextField \r\n                    fullWidth\r\n                    sx={{display: 'block', marginTop: '2px'}}\r\n                    id=\"outlined-multiline-static\"\r\n                    placeholder=\"Post title here\"\r\n                    onKeyPress={handleKeyPress}\r\n                    onChange={(e) => setPostTitle(e.target.value)}\r\n                    value={postTitle}\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    sx={{display: 'block', marginBottom: '2px'}}\r\n                    id=\"outlined-multiline-static\"\r\n                    multiline\r\n                    rows={2}\r\n                    placeholder=\"Enter your post here\"\r\n                    onKeyPress={handleKeyPress}\r\n                    onChange={(e) => setPostContent(e.target.value)}\r\n                    value={postContent}\r\n                />\r\n                {showImgForm ? (\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        type=\"reset\"\r\n                        onClick={handleCancel}\r\n                    >\r\n                        Cancel adding image\r\n                    </Button>\r\n                ) : (\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        startIcon={<InsertPhotoIcon />}\r\n                        onClick={toggleImgForm}\r\n                    >\r\n                        Add image/Change image\r\n                    </Button>\r\n                )}\r\n            </Box>\r\n\r\n            <div>\r\n                {showImgForm ? (\r\n                    <div>\r\n                        {imgPreview ? (\r\n                            <div>\r\n                                <img src={imgPreview} width=\"100%\" alt=\"Preview\" />\r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <TextField\r\n                                    variant='standard'\r\n                                    type='file'\r\n                                    onChange={(e) => handleImgChange(e)}\r\n                                    name=\"post_img\"\r\n                                    id=\"post_img\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Confirm changes\r\n                        </Button>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default EditPostForm;","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { formatDistance } from \"date-fns\";\r\nimport CommentContainer from \"../Comments/CommentContainer\";\r\nimport UseAvatar from \"../../UseAvatar\";\r\nimport EditPostForm from \"./EditPostForm\";\r\n\r\n// mui setup\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\nimport CommentIcon from '@mui/icons-material/Comment';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\n// the handle functions are all defined in axiosFns\r\nconst Post = ({\r\n    user, \r\n    post, \r\n    handlePostEdit,\r\n    handlePostDelete, \r\n    handleCommentSend, \r\n    handleCommentEdit, \r\n    handleCommentDelete,\r\n    handleLikePost, \r\n    handleLikeComment, \r\n    getPosts\r\n}) => {\r\n    const [showCommentForm, setShowCommentForm] = useState(false);\r\n    const [showEditForm, setShowEditForm] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const toggleShowComment = () => {\r\n        setShowCommentForm(!showCommentForm);\r\n    }\r\n\r\n    const toggleShowEdit = () => {\r\n        setShowEditForm(!showEditForm);\r\n    }\r\n\r\n    const handleNameClick = () => {\r\n        navigate(`/users/${post.post_author._id}`);\r\n    }\r\n\r\n    return (\r\n        <Box sx={{width: '100%', display: 'flex', flexDirection: 'column', margin: '8px', paddingTop: '8px'}}>\r\n            <Box sx={{display: 'flex', flexDirection: 'row', justifyContent: 'flex-start'}}>\r\n                <UseAvatar user={post.post_author}/>    \r\n\r\n                <Box sx={{flexDirection: 'column', marginLeft: '8px'}}>\r\n                    <Typography variant=\"body1\" onClick={handleNameClick}>\r\n                        {`${post.post_author.first_name} ${post.post_author.last_name}`}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">\r\n                        {formatDistance(new Date(post.post_timestamp), new Date(), {\r\n                            addSuffix: true,\r\n                        })}\r\n                    </Typography>\r\n                </Box>\r\n\r\n                {user.id === post.post_author._id && \r\n                    <div>\r\n                        {showEditForm? (\r\n                            <Box>\r\n                                <EditPostForm \r\n                                    user={user}\r\n                                    targetPost={post}\r\n                                    handlePostEdit={handlePostEdit}\r\n                                    getPosts={getPosts}\r\n                                />\r\n                            </Box>\r\n                        ) : (\r\n                            <Box sx={{marginLeft: '56vh', display: 'inline'}}>\r\n                                <IconButton\r\n                                    aria-label=\"Edit post\"\r\n                                    onClick={toggleShowEdit}\r\n                                >\r\n                                    <EditIcon fontSize=\"small\"/>\r\n                                </IconButton>\r\n\r\n                                <IconButton\r\n                                    aria-label=\"Delete post\"\r\n                                    onClick={() => handlePostDelete(post._id)}\r\n                                >\r\n                                    <DeleteIcon fontSize=\"small\"/>\r\n                                </IconButton>\r\n                            </Box>\r\n                        )}\r\n                    </div>\r\n                }\r\n            </Box>\r\n\r\n            <div>\r\n                <Typography variant=\"body1\">\r\n                    {post.post_title}\r\n                </Typography>\r\n            </div>\r\n\r\n            <div>\r\n                <Typography variant=\"body1\">\r\n                    {post.post_content}\r\n                </Typography>\r\n            </div>\r\n\r\n            <div>\r\n                {post.post_img && <img src={post.post_img} width=\"100%\" alt=\"Post attachment\"/>}\r\n            </div>\r\n\r\n            <Typography variant='subtitle2'>\r\n                {post.post_likes.length === 1 ? \"1 like\" : `${post.post_likes.length} likes`}\r\n            </Typography>\r\n\r\n            <Box sx={{margin: '8px 0 8px 0'}}>\r\n                <Button \r\n                    variant=\"outlined\" \r\n                    startIcon={<ThumbUpIcon />} \r\n                    onClick={() => handleLikePost(post._id)}\r\n                >\r\n                    Like\r\n                </Button>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    startIcon={<CommentIcon />}\r\n                    onClick={toggleShowComment}\r\n                >\r\n                    Comment\r\n                </Button>\r\n            </Box>\r\n\r\n            <CommentContainer \r\n                post={post}\r\n                showCommentForm={showCommentForm}\r\n                user={user}\r\n                handleCommentSend={handleCommentSend}\r\n                handleCommentEdit={handleCommentEdit}\r\n                handleCommentDelete={handleCommentDelete}\r\n                handleLikeComment={handleLikeComment}\r\n                getPosts={getPosts}\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from './Post';\r\n\r\n// mui setup\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst PostContainer = ({\r\n    user,\r\n    posts,\r\n    handlePostEdit,\r\n    handlePostDelete,\r\n    handleCommentSend,\r\n    handleCommentEdit,\r\n    handleCommentDelete,\r\n    handleLikePost,\r\n    handleLikeComment,\r\n    handleScroll,\r\n    loading,\r\n    getPosts,\r\n}) => {\r\n\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                Loading...\r\n            </div>\r\n        );\r\n    };\r\n\r\n    if (!posts.length) {\r\n        return (\r\n            <Paper>\r\n                <div>\r\n                    No posts here\r\n                </div>\r\n            </Paper>\r\n        );\r\n    };\r\n    return (\r\n        <div onScroll={handleScroll}>\r\n            {posts.map((post) => {\r\n                return (\r\n                    <Paper key={post._id}>\r\n                        <Post \r\n                            post={post}\r\n                            user={user}\r\n                            handlePostEdit={handlePostEdit}\r\n                            handlePostDelete={handlePostDelete}\r\n                            handleCommentSend={handleCommentSend}\r\n                            handleCommentEdit={handleCommentEdit}\r\n                            handleCommentDelete={handleCommentDelete}\r\n                            handleLikePost={handleLikePost}\r\n                            handleLikeComment={handleLikeComment}\r\n                            getPosts={getPosts}\r\n                        />\r\n                    </Paper>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostContainer;","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport UseAvatar from \"../../UseAvatar\";\r\n\r\n// mui setup\r\nimport ListSubheader from '@mui/material/ListSubheader';\r\nimport List from '@mui/material/List';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport { IconButton, ListItem } from \"@mui/material\";\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport NotInterestedIcon from '@mui/icons-material/NotInterested';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\n\r\n\r\nconst FriendList = ({friends, friendReqs, handleAcceptRequest, handleDenyRequest}) => {\r\n    const navigate = useNavigate();\r\n\r\n    const handleAvatarClick = (id) => {\r\n        navigate(`/users/${id}`);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <List\r\n                aria-label=\"Friend Requests Received\"\r\n                subheader={<ListSubheader>Friend requests received</ListSubheader>}\r\n            >\r\n                {friendReqs.length > 0 ? (\r\n                    friendReqs.map((sender) => {\r\n                        return (\r\n                            <ListItem key={sender._id} secondaryAction={\r\n                                <div>\r\n                                    <IconButton sx={{color: 'success.main'}} onClick={() => handleAcceptRequest(sender._id)}>\r\n                                        <CheckIcon/>\r\n                                    </IconButton>\r\n                                    <IconButton sx={{color: 'error.main'}} onClick={() => handleDenyRequest(sender._id)}>\r\n                                        <NotInterestedIcon/>\r\n                                    </IconButton>\r\n                                </div>\r\n                                }\r\n                            >\r\n                                <ListItemAvatar onClick={() => handleAvatarClick(sender._id)}>\r\n                                    <UseAvatar user={sender}/>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={`${sender.first_name} ${sender.last_name}`}/>\r\n                            </ListItem>\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <Typography variant=\"body1\">\r\n                        No friend requests at this moment.\r\n                    </Typography>\r\n                )}\r\n            </List>\r\n            <Divider/>\r\n            <List\r\n                aria-label=\"Friends\"\r\n                subheader={<ListSubheader>Friends</ListSubheader>}\r\n            >\r\n                {friends.length > 0 ? (\r\n                    friends.map((fren)=>{\r\n                        return (\r\n                            <ListItem key={fren._id}>\r\n                                <ListItemAvatar onClick={() => handleAvatarClick(fren._id)}>\r\n                                    <UseAvatar user={fren}/>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={`${fren.first_name} ${fren.last_name}`}/>\r\n                            </ListItem>\r\n                        )\r\n                        })) : (\r\n                    <Typography variant=\"body1\">\r\n                        No friends yet!\r\n                    </Typography>\r\n                )}\r\n            </List>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendList;","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport UseAvatar from \"./UseAvatar\";\r\n\r\n// mui setup\r\nimport List from '@mui/material/List';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport { ListItem, ListItemIcon } from \"@mui/material\";\r\nimport Divider from '@mui/material/Divider';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\n\r\nconst LinkList = ({user}) => {\r\n    const navigate = useNavigate();\r\n\r\n    const handleAvatarClick = (id) => {\r\n        navigate(`/users/${id}`);\r\n    };\r\n\r\n    const handleFriendsClick = () => {\r\n        navigate('/friends');\r\n    }\r\n\r\n    const handleSettingsClick = () => {\r\n        navigate('/account');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <List aria-label='nav list'>\r\n                <ListItem>\r\n                    <ListItemAvatar onClick={()=>handleAvatarClick(user.id)}>\r\n                        <UseAvatar user={user}/>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={`${user.first_name} ${user.last_name}`}/>\r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem>\r\n                    <ListItemIcon>\r\n                        <PeopleIcon/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary='Friends' onClick={handleFriendsClick}/>\r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem>\r\n                    <ListItemIcon>\r\n                        <SettingsIcon/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary='Settings' onClick={handleSettingsClick}/>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LinkList;","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"../../utils/axios\";\r\nimport axiosFns from \"../../utils/axiosFns\";\r\nimport NewPostFrom from \"../Posts/NewPostForm\";\r\nimport PostContainer from \"../Posts/PostContainer\";\r\nimport FriendsList from \"../Friends/FriendList\";\r\nimport LinkList from \"../../LinkList\";\r\n\r\n// mui setup\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst Dashboard = ({user, setUser}) => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loadingPosts, setLoadingPosts] = useState(false);\r\n    const [userFriends, setUserFriends] = useState([]);\r\n    const [friendRequests, setFriendRequests] = useState([]);\r\n    const [skip, setSkip] = useState(0);\r\n    const navigate = useNavigate();\r\n\r\n    if (!user) {\r\n        navigate('/login');\r\n    }\r\n\r\n    const {\r\n        getPosts,\r\n        handlePostSend,\r\n        handlePostEdit,\r\n        handlePostDelete,\r\n        handleLikePost,\r\n        handleCommentSend,\r\n        handleCommentEdit,\r\n        handleCommentDelete,\r\n        handleLikeComment,\r\n        handleAcceptRequest,\r\n        handleDenyRequest,\r\n      } = axiosFns({\r\n        posts,\r\n        setPosts,\r\n        user,\r\n        skip,\r\n        setLoadingPosts,\r\n        userFriends,\r\n        setUserFriends,\r\n        friendRequests,\r\n        setFriendRequests,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [skip]);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            axios\r\n            .get(`/users/${user.id}`)\r\n            .then((results) => {\r\n                setUserFriends(results.data.user.user.friend_list);\r\n                setFriendRequests(results.data.user.user.friend_req_rec);\r\n            })\r\n            .catch((err) => {\r\n                if (err.response && (err.response === 500 || err.response === 401)) {\r\n                    setUser('');\r\n                    navigate('/login');\r\n                };\r\n            });\r\n        };\r\n    }, [user]);\r\n\r\n    const handleScroll = (e) => {\r\n        const bottom = e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\r\n        if (bottom) {\r\n            setSkip(posts.length);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth=\"x1\">\r\n            <div>\r\n                <Grid container spacing={3}>\r\n                    \r\n                    <Grid item md={3} sx={{display: {xs:'none', md:'block'}, marginTop: '8px'}}>\r\n                        <Paper>\r\n                            <LinkList user={user}/>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={6} sx={{marginTop: '8px'}}>\r\n                        <Paper>\r\n                            <NewPostFrom user={user} handlePostSend={handlePostSend} getPosts={getPosts}/>\r\n                        </Paper>\r\n                        <PostContainer\r\n                            user={user}\r\n                            posts={posts}\r\n                            handlePostEdit={handlePostEdit}\r\n                            handlePostDelete={handlePostDelete}\r\n                            handleCommentSend={handleCommentSend}\r\n                            handleCommentEdit={handleCommentEdit}\r\n                            handleCommentDelete={handleCommentDelete}\r\n                            handleLikePost={handleLikePost}\r\n                            handleLikeComment={handleLikeComment}\r\n                            handleScroll={handleScroll}\r\n                            loading={loadingPosts}\r\n                            getPosts={getPosts}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sx={{display: {xs:'none', md:'block'}, marginTop: '8px'}}>\r\n                        <Paper>\r\n                            <FriendsList\r\n                                friends={userFriends}\r\n                                friendReqs={friendRequests}\r\n                                handleAcceptRequest={handleAcceptRequest}\r\n                                handleDenyRequest={handleDenyRequest}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","import React from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\nimport UseAvatar from '../../UseAvatar';\r\n\r\n// mui setup\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst FriendCard = ({friend}) => {\r\n    // const navigate = useNavigate();\r\n\r\n    /*\r\n    const handleClick = () => {\r\n        navigate(`/users/${friend._id}`);\r\n    }\r\n    */\r\n\r\n    return (\r\n        <Paper sx={{\r\n            backgroundColor: 'rgb(32,33,34)', \r\n            color: 'white', \r\n            margin: '20px 10px',\r\n            width: '25%',\r\n            textAlign: 'center',\r\n            }}>\r\n            <Card sx={{display: 'flex', alignItems: 'center',  paddingLeft: '8px'}}>\r\n                <UseAvatar user={friend} />\r\n                <CardContent>\r\n                    <Typography variant=\"body1\">\r\n                        {friend.first_name} {friend.last_name}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default FriendCard;","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport UseAvatar from '../../UseAvatar';\r\n\r\n// mui setup\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst FriendCard = ({friend, handleAcceptRequest, handleDenyRequest}) => {\r\n    const navigate = useNavigate();\r\n\r\n    const handleClick = () => {\r\n        navigate(`/users/${friend._id}`);\r\n    }\r\n\r\n    return (\r\n        <Paper sx={{\r\n            textAlign: 'center',\r\n            backgroundColor: 'rgb(32,33,34)',\r\n            color: 'white',\r\n            margin: '20px 10px',\r\n            width: '25%',\r\n        }}>\r\n            <Card sx={{display: 'flex', alignItems: 'center', flexWrap: 'wrap', paddingLeft: '8px'}}>\r\n                <UseAvatar user={friend} />\r\n                <CardContent onClick={handleClick} sx={{flexDirection: 'row', flexWrap: 'wrap'}}>\r\n                    <Typography variant=\"body1\" sx={{flexWrap: 'wrap'}}>\r\n                        {friend.first_name} {friend.last_name}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size='small' onClick={() => handleAcceptRequest(friend._id)}>\r\n                        Accept\r\n                    </Button>\r\n                    <Button size='small' onClick={() => handleDenyRequest(friend._id)}>\r\n                        Deny\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default FriendCard;","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from '../../utils/axios';\r\n\r\n// mui setup\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst UserSearch = () => {\r\n    const [queryStr, setQueryStr] = useState('');\r\n    const [usersList, setUsersList] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get('/users')\r\n        .then((results) => {\r\n            setUsersList(results.data.users);\r\n        })\r\n    }, []);\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            const queryArr = queryStr.split(' ');\r\n            const userQuery1 = queryArr[0];\r\n            const userQuery2 = queryArr[1];\r\n            axios\r\n            .post('/users/search', {userQuery1, userQuery2})\r\n            .then((results) => {\r\n                if (results.data.user) {\r\n                    // tempted to try something else for this\r\n                    navigate(`/users/${results.data.user._id}`);\r\n                } else {\r\n                    setError(results.data.error);\r\n                    setTimeout(() => {\r\n                        setError(null);\r\n                    }, 5000);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSearchBtnClick = () => {\r\n        const queryArr = queryStr.split(' ');\r\n        const userQuery1 = queryArr[0];\r\n        const userQuery2 = queryArr[1];\r\n        axios\r\n        .post('/users/search', {userQuery1, userQuery2})\r\n        .then((results) => {\r\n            if (results.data.user) {\r\n                // tempted to try something else for this\r\n                navigate(`/users/${results.data.user._id}`);\r\n            } else {\r\n                setError(results.data.error);\r\n                setTimeout(() => {\r\n                    setError(null);\r\n                }, 5000);\r\n            }\r\n        });\r\n    }\r\n\r\n    if (!usersList) {\r\n        return <div>Loading...</div>\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Typography variant=\"h5\">\r\n                Search for another user\r\n            </Typography>\r\n            <TextField\r\n                sx={{width: '90%', marginLeft: '8px'}}\r\n                id=\"outlined-search\"\r\n                label=\"Username\"\r\n                type=\"search\"\r\n                onChange={(e) => setQueryStr(e.target.value)}\r\n                onKeyPress={handleKeyPress}\r\n                value={queryStr}\r\n            />\r\n            <IconButton onClick={handleSearchBtnClick} sx={{marginLeft: '8px', paddingTop: '9px'}}>\r\n                <SearchIcon fontSize=\"large\"/>\r\n            </IconButton>\r\n            {error && (\r\n                <div>\r\n                    <Typography variant=\"body1\">\r\n                        {error}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default UserSearch;","import React, { useState, useEffect } from \"react\";\r\nimport axios from '../../utils/axios';\r\nimport axiosFns from \"../../utils/axiosFns\";\r\nimport FriendCard from \"./FriendCard\";\r\nimport FriendRequestCard from \"./FriendRequestCard\";\r\nimport UserSearch from \"../UserSearch/UserSearch\";\r\n\r\n// mui setup\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\n\r\nconst Friends = ({user}) => {\r\n    const [userFriends, setUserFriends] = useState([]);\r\n    const [friendRequests, setFriendRequests] = useState([]);\r\n    const {handleAcceptRequest, handleDenyRequest} = axiosFns({\r\n        userFriends: userFriends,\r\n        setUserFriends: setUserFriends,\r\n        friendRequests: friendRequests,\r\n        setFriendRequests: setFriendRequests,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            axios\r\n            .get(`/users/${user.id}`)\r\n            .then((results) => {\r\n            setUserFriends(results.data.user.user.friend_list);\r\n            setFriendRequests(results.data.user.user.friend_req_rec);\r\n            });\r\n        }\r\n    }, [user]);\r\n\r\n    return(\r\n        <Container maxWidth=\"x1\" sx={{minHeight: '100vh', marginTop: '10px'}}>\r\n            <Grid container spacing={3} sx={{justifyContent: 'center'}}>\r\n                <Grid item xs={12} md={9}>\r\n                    <UserSearch />\r\n                    {friendRequests ? (\r\n                        <Typography variant=\"h5\">\r\n                            Friend requests received\r\n                        </Typography>\r\n                    ) : null }\r\n                    {friendRequests.length > 0 ? (\r\n                        friendRequests.map((fren) => {\r\n                            return (\r\n                                <FriendRequestCard \r\n                                    friend={fren}\r\n                                    key={fren._id}\r\n                                    handleAcceptRequest={handleAcceptRequest}\r\n                                    handleDenyRequest={handleDenyRequest}\r\n                                />\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <Typography variant=\"body1\">\r\n                            You do you have any friend requests at this moment.\r\n                        </Typography>\r\n                    )}\r\n                    <Typography variant=\"h5\">\r\n                        Friends\r\n                    </Typography>\r\n                    {userFriends.length > 0 ? (\r\n                        userFriends.map((fren) => {\r\n                            return (\r\n                                <FriendCard \r\n                                    friend={fren}\r\n                                    key={fren._id}\r\n                                />\r\n                            );\r\n                        })\r\n                    ) : (\r\n                        <Typography variant=\"body1\">\r\n                            No friends yet!\r\n                        </Typography>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Friends;","import React, { useState } from \"react\";\r\n\r\n// mui setup for the registration page\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nconst Registration = (props) => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    const handleClick = () => {\r\n        props.handleRegistration(firstName, lastName, username, password, email, phoneNumber, confirmPassword);\r\n        setFirstName('');\r\n        setLastName('');\r\n        setUsername('');\r\n        setPassword('');\r\n        setPhoneNumber('');\r\n        setEmail('');\r\n        setConfirmPassword('');\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            component=\"form\"\r\n            sx={{\r\n                '& .MuiTextField-root': { m: 1, width: '35ch' },\r\n                width: {mobile: 100, laptop: 400},\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                margin: 'auto',\r\n            }}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n        >\r\n            <h3>Don't have an account? Sign up for free!</h3>\r\n            <TextField\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"First Name\"\r\n                onChange = {(e) => setFirstName(e.target.value)}\r\n                value={firstName}\r\n            />\r\n            <TextField\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"Last Name\"\r\n                onChange = {(e) => setLastName(e.target.value)}\r\n                value={lastName}\r\n            />\r\n            <TextField\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"Username\"\r\n                onChange = {(e) => setUsername(e.target.value)}\r\n                value={username}\r\n            />\r\n            <TextField\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"E-mail\"\r\n                onChange = {(e) => setEmail(e.target.value)}\r\n                value={email}\r\n            />\r\n            <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                onChange = {(e) => setPassword(e.target.value)}\r\n                value={password}\r\n            />\r\n            <TextField\r\n                id=\"outlined-password-input\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                onChange = {(e) => setConfirmPassword(e.target.value)}\r\n                value={confirmPassword}\r\n            />\r\n            <TextField\r\n                id=\"outlined-number\"\r\n                label=\"Phone Number\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange = {(e) => setPhoneNumber(e.target.value)}\r\n                value={phoneNumber}\r\n            />\r\n            <Stack direction=\"row\" spacing={2}>\r\n                <Button variant=\"contained\" onClick={handleClick}>Register</Button>\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Registration;","import React from \"react\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\n\r\n// mui setup\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst Facebook = ({handleFBLogin}) => {\r\n    const componentClicked = () => {};\r\n\r\n    const responseFB = (res) => {\r\n        handleFBLogin(res.accessToken);\r\n    };\r\n\r\n    return (\r\n        <Box style={{ display: 'flex', margin: \"8px 8px 8px 8px\", alignSelf: 'center' }}>\r\n            <FacebookLogin\r\n                appId={process.env.FACEBOOK_APP_ID}\r\n                autoLoad={true}\r\n                fields=\"name,email,picture\"\r\n                onClick={componentClicked}\r\n                callback={responseFB}\r\n                render={(renderProps) => (\r\n                    <Button\r\n                        onClick={renderProps.onClick}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        style={{ width: \"100%\" }}\r\n                        startIcon={<FacebookIcon />}\r\n                    >\r\n                        Log in with Facebook\r\n                    </Button>\r\n                )}\r\n            />\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default Facebook;","import React, { useState } from \"react\";\r\nimport Registration from \"./Registration\";\r\nimport Facebook from \"./Facebook\";\r\n\r\n// mui setup for LoginForm\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nconst theme = createTheme();\r\n\r\nconst LoginForm = (props) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [err, setErr] = useState(null);\r\n\r\n    const handleKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            handleClick();\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        props.handleLogin(username, password);\r\n        setUsername('');\r\n        setPassword('');\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Box\r\n                sx={{\r\n                    '& .MuiTextField-root': { m: 1, width: '35ch' },\r\n                    width: {mobile: 100, laptop: 400},\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    margin: 'auto',\r\n                }}\r\n                noValidate\r\n                autoComplete=\"off\"\r\n            >\r\n                <h1>Log in to your account</h1>\r\n                <TextField\r\n                    required\r\n                    id=\"outlined-required\"\r\n                    label=\"Username\"\r\n                    onChange = {(e) => setUsername(e.target.value)}\r\n                    value={username}\r\n                />\r\n                <TextField\r\n                    sx={{width: '100%'}}\r\n                    id=\"outlined-password-input\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    onChange = {(e) => setPassword(e.target.value)}\r\n                    value={password}\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n                {props.err ? props.err.map((er) => {\r\n                    return (\r\n                        <div>\r\n                            {er.msg}\r\n                        </div>\r\n                    )\r\n                }) : null}\r\n                <Stack direction=\"row\" spacing={2}>\r\n                    <Button variant=\"contained\" onClick={handleClick}>Login</Button>\r\n                </Stack>\r\n                <Facebook handleFBLogin={props.handleFBLogin} />\r\n                <Registration handleRegistration={props.handleRegistration}/>\r\n            </Box>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"../../utils/axios\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\n// mui setup\r\nimport Box from '@mui/material/Box';\r\n\r\nconst Login = ({user, setUser}) => {\r\n    const navigate = useNavigate();\r\n    const [errors, setErr] = useState([]);\r\n    const [registerErrors, setRegErrors] = useState([])\r\n\r\n    const handleLogin = (username, password) => {\r\n        axios.post('/auth/login', {username, password})\r\n        .then((results) => {\r\n            const user = {\r\n                first_name: results.data.user.first_name,\r\n                last_name: results.data.user.last_name,\r\n                username: results.data.user.username,\r\n                email: results.data.user.email,\r\n                phone_number: results.data.user.phone_number,\r\n                profile_pic: results.data.user.profile_pic,\r\n                id: results.data.user.id,\r\n                token: results.data.user.token,\r\n            };\r\n            axios.defaults.headers.common['Authorization'] = results.data.token.token;\r\n            setUser(user);\r\n            navigate('/');\r\n        }).catch((err) => {\r\n            if (err) {\r\n                setErr(err.response.data.errors);\r\n                setTimeout(() => {\r\n                    setErr({});\r\n                }, 3000);\r\n            } else if (err.response.data.message) {\r\n                setErr([...errors, {msg: err.response.data.message}]);\r\n                setTimeout(() => {\r\n                    setErr([]);\r\n                }, 3000);\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleRegister = (first_name, last_name, username, password, email, phone_number, confirm_password) => {\r\n        axios.post('/auth/register', {first_name, last_name, username, password, email, phone_number, confirm_password})\r\n        .then((results) => {\r\n            const user = {\r\n                first_name: results.data.user.first_name,\r\n                last_name: results.data.user.last_name,\r\n                username: results.data.user.username,\r\n                email: results.data.user.email,\r\n                phone_number: results.data.user.phone_number,\r\n                profile_pic: results.data.user.profile_pic,\r\n                id: results.data.user.id,\r\n                token: results.data.user.token,\r\n            };\r\n        axios.defaults.headers.common['Authorization'] = results.data.token.token;\r\n        setUser(user);\r\n        navigate('/');\r\n        })\r\n        .catch((err) => {\r\n            if (err.response.data.errors) {\r\n                console.log(err);\r\n                setRegErrors(err.response.data.errors);\r\n                setTimeout(() => {\r\n                    setRegErrors([]);\r\n                }, 3000);\r\n            } else if (err.response.data.message) {\r\n                console.log(err);\r\n                setRegErrors([...registerErrors, {msg: err.response.data.message}]);\r\n                setTimeout(() => {\r\n                    setRegErrors([]);\r\n                }, 3000);\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleFBLogin = (accessToken) => {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\r\n        axios.post('/auth/facebook/token')\r\n        .then((results) => {\r\n            const user = {\r\n                first_name: results.data.user.first_name,\r\n                last_name: results.data.user.last_name,\r\n                username: results.data.user.username,\r\n                email: results.data.user.email,\r\n                phone_number: results.data.user.phone_number,\r\n                profile_pic: results.data.user.profile_pic,\r\n                id: results.data.user.id,\r\n                token: `Bearer ${accessToken}`,\r\n                facebookId: results.data.user.facebookId\r\n            };\r\n            setUser(user);\r\n            navigate('/');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box                 \r\n            sx={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                margin: 'auto',\r\n        }}>\r\n            <LoginForm \r\n                handleLogin = {handleLogin}\r\n                handleFBLogin = {handleFBLogin}\r\n                handleRegistration = {handleRegister}\r\n            />\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default Login;","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport UseAvatar from \"../../UseAvatar\";\r\n\r\n// mui setup for the NavBar\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nconst NavBar = ({user, setUser}) => {\r\n    const navigate = useNavigate();\r\n    const [anchorElNav, setAnchorElNav] = useState(null);\r\n    const [anchorElUser, setAnchorElUser] = useState(null);\r\n\r\n    const handleOpenNavMenu = (event) => {\r\n      setAnchorElNav(event.currentTarget);\r\n    };\r\n\r\n    const handleOpenUserMenu = (event) => {\r\n      setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseNavMenu = () => {\r\n      setAnchorElNav(null);\r\n    };\r\n\r\n    const handleCloseUserMenu = () => {\r\n      setAnchorElUser(null);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n      setUser('');\r\n      handleCloseUserMenu();\r\n      navigate('/login');\r\n    }\r\n\r\n    const handleLogoClick = () => {\r\n      handleCloseNavMenu();\r\n      if (user) {\r\n        navigate('/');\r\n      } else {\r\n        navigate('/login');\r\n      }\r\n    }\r\n\r\n    const handleFriendListClick = () => {\r\n      handleCloseNavMenu();\r\n      navigate('/friends');\r\n    }\r\n\r\n    const handleProfileClick = () => {\r\n      handleCloseUserMenu();\r\n      navigate(`/users/${user.id}`);\r\n    }\r\n\r\n    const handleSettingsClick = () => {\r\n      handleCloseUserMenu();\r\n      navigate(`/account`);\r\n    }\r\n\r\n    return(\r\n      <AppBar position=\"static\" sx={{backgroundColor: '#4267B2'}}>\r\n        <Container maxWidth=\"xl\">\r\n          <Toolbar disableGutters>\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n              sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\r\n              onClick={handleLogoClick}\r\n            >\r\n              Odinbook\r\n            </Typography>\r\n  \r\n            <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleOpenNavMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              {user? (\r\n                <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElNav}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'left',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'left',\r\n                }}\r\n                open={Boolean(anchorElNav)}\r\n                onClose={handleCloseNavMenu}\r\n                sx={{\r\n                  display: { xs: 'block', md: 'none' },\r\n                }}\r\n              >\r\n                <MenuItem key='Home' onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\" onClick={handleLogoClick}>Home</Typography>\r\n                </MenuItem>\r\n                <MenuItem key='Friends' onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\" onClick={handleFriendListClick}>Friends</Typography>\r\n                </MenuItem>\r\n              </Menu>\r\n              ) : null}\r\n            </Box>\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n              sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\r\n              onClick={handleLogoClick}\r\n            >\r\n              Odinbook\r\n            </Typography>           \r\n            {user ? (\r\n            <Box sx={{ flexGrow: 0 }}>\r\n              <Tooltip title=\"Open settings\">\r\n                <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                  <UseAvatar user={user} />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Menu\r\n                sx={{ mt: '45px' }}\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElUser}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorElUser)}\r\n                onClose={handleCloseUserMenu}\r\n              >\r\n                <MenuItem key='Profile' onClick={handleCloseUserMenu}>\r\n                    <Typography textAlign=\"center\" onClick={handleProfileClick}>Profile</Typography>\r\n                </MenuItem>\r\n                <MenuItem key='Settings' onClick={handleCloseUserMenu}>\r\n                    <Typography textAlign=\"center\" onClick={handleSettingsClick}>Settings</Typography>\r\n                </MenuItem>\r\n                <MenuItem key='Logout' onClick={handleCloseUserMenu}>\r\n                    <Typography textAlign=\"center\" onClick={handleLogout}>Logout</Typography>\r\n                </MenuItem>\r\n              </Menu>\r\n            </Box>\r\n            ) : null}\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    )\r\n};\r\n\r\nexport default NavBar;","import React from \"react\";\r\n\r\n// mui setup\r\nimport Button from '@mui/material/Button';\r\n\r\nconst FriendButtons = ({\r\n    user,\r\n    friendsArr,\r\n    friendReqSent, // logged user's friend requests sent\r\n    loggedUser,\r\n    handleFriendReq,\r\n    friendReqRec, // logged user's friend requests received\r\n    acceptFriendReq,\r\n    denyFriendReq,\r\n}) => {\r\n    return (\r\n        <div>\r\n            {friendsArr.includes(loggedUser.id) ? (//user already friends with the target user?\r\n                <div>\r\n                    <Button variant=\"outlined\">\r\n                        Already befriended\r\n                    </Button>\r\n                </div>\r\n            ) : friendReqSent.includes(user._id) ? (//user have sent a friend request to the target user?\r\n                <div>\r\n                    <Button variant=\"outlined\">\r\n                        Friend request sent\r\n                    </Button>\r\n                </div>\r\n            ) : friendReqRec.includes(user._id) ? (//target user have sent user(you) a friend request\r\n                <div>\r\n                    <Button variant=\"contained\" onClick={() => acceptFriendReq(user._id)}>\r\n                        Accept friend request\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={() => denyFriendReq(user._id)}>\r\n                        Decline friend request\r\n                    </Button>\r\n                </div>\r\n            ) : (//total stranger, not friends\r\n                <div>\r\n                    <Button variant=\"contained\" onClick={() => handleFriendReq(user._id)}>\r\n                        Send friend request\r\n                    </Button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendButtons;","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"../../utils/axios\";\r\nimport axiosFns from \"../../utils/axiosFns\";\r\nimport FriendButtons from \"./FriendButtons\";\r\n\r\n// mui setup\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nconst UserInfo = ({\r\n    user,\r\n    loggedUser,\r\n    handleFriendReq,\r\n    toggleEditProfile,\r\n    toggleEditImage,\r\n}) => {\r\n    const [initials, setInitials] = useState('');\r\n    const [friendsArr, setFriendsArr] = useState([]);\r\n    const [friendReqSent, setFriendReqSent] = useState([]);\r\n    const [friendReqRec, setFriendReqRec] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const {handleAcceptRequest, handleDenyRequest} = axiosFns({\r\n        userFriends: friendsArr,\r\n        setUserFriends: setFriendsArr,\r\n        friendRequests: friendReqRec,\r\n        setFriendRequests: setFriendReqRec,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setInitials(`${user.first_name[0]} ${user.last_name[0]}`);\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        const filteredFriendsArr = user.friend_list.map((friend) => friend._id);\r\n        setFriendsArr(filteredFriendsArr);\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get(`/users/${loggedUser.id}`)\r\n        .then((results) => {\r\n            const loggedUserFriendsReqRec = results.data.user.user.friend_req_rec.map((friend) => friend._id);\r\n            const loggedFriendReqSent = results.data.user.user.friend_req_sent.map((friend) => friend._id);\r\n            setFriendReqRec(loggedUserFriendsReqRec);\r\n            setFriendReqSent(loggedFriendReqSent);\r\n        });\r\n    }, []);\r\n\r\n    const acceptFriendReq = (id) => {\r\n        handleAcceptRequest(id);\r\n        navigate('/temp');\r\n        navigate.goBack();\r\n    };\r\n\r\n    const denyFriendReq = (id) => {\r\n        handleDenyRequest(id);\r\n        navigate('/temp');\r\n        navigate.goBack();\r\n    };\r\n\r\n    return (\r\n        <Box sx={{color: 'white', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>\r\n            <Box sx={{\r\n                borderRadius: '50%', \r\n                height: '150px', \r\n                width: '150px', \r\n                border: '1px solid black', \r\n                marginBottom: 5,\r\n                marginTop: 5, \r\n                marginLeft: 'auto',\r\n                marginRight: 'auto',\r\n            }}>\r\n                <Avatar\r\n                    alt={`${user.first_name} ${user.last_name}`}\r\n                    src={user.profile_pic ? user.profile_pic : ''}\r\n                    sx={{height: '150px', width: '150px'}}\r\n                >\r\n                    {user.profile_pic ? null : initials}\r\n                </Avatar>\r\n            </Box>\r\n            <Box>\r\n                <Typography variant=\"h5\">\r\n                    {`${user.first_name} ${user.last_name}`}\r\n                </Typography>\r\n                {user._id !== loggedUser.id ? (\r\n                    <Box sx={{marginBottom: '8px'}}>\r\n                        <FriendButtons\r\n                            user={user}\r\n                            friendsArr={friendsArr}\r\n                            friendReqSent={friendReqSent}\r\n                            loggedUser={loggedUser}\r\n                            handleFriendReq={handleFriendReq}\r\n                            friendReqRec={friendReqRec}\r\n                            acceptFriendReq={acceptFriendReq}\r\n                            denyFriendReq={denyFriendReq}\r\n                        />\r\n                    </Box>\r\n                ) : (\r\n                    <Box sx={{marginBottom: '8px'}}>\r\n                        <Button variant=\"contained\" sx={{margin: '10px 10px'}} onClick={toggleEditProfile}>Edit profile</Button>\r\n                        <Button variant=\"contained\" sx={{margin: '10px 10px'}} onClick={toggleEditImage}>Change profile picture</Button>\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default UserInfo;","import React from \"react\";\r\n// formik seems interesting, will try it out for this part\r\nimport { Formik, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\n// mui setup\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\n// A custom validation function. This must return an object\r\n// which keys are symmetrical to our values/initialValues\r\n// can consider using Yup to help with validation \r\n/*\r\nconst validate = values => {\r\n    const errors = {};\r\n    if (!values.first_name) {\r\n        errors.first_name = 'Required';\r\n    }\r\n\r\n    if (!values.last_name) {\r\n        errors.last_name = 'Required';\r\n    }\r\n\r\n    if (!values.email) {\r\n        errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n\r\n    return errors;\r\n};\r\n*/\r\n\r\nconst ValidateSchema = Yup.object({\r\n    first_name: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\r\n    last_name: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\r\n    email: Yup.string().email('Invalid email address').required('Required'),\r\n});\r\n\r\nconst EditProfileForm = ({user, toggleEditProfile, handleProfileUpdate}) => {\r\n    return (\r\n        <Box sx={{display: 'flex', flexWrap: 'wrap'}}>\r\n            <Typography variant=\"h5\">\r\n                Edit profile\r\n            </Typography>\r\n            <Formik\r\n                initialValues={{\r\n                    first_name: user.first_name, \r\n                    last_name: user.last_name, \r\n                    email: user.email, \r\n                    phone_number: user.phone_number\r\n                }}\r\n                validationSchema={ValidateSchema}\r\n                onSubmit={(values) => {\r\n                    handleProfileUpdate(values);\r\n                    toggleEditProfile();\r\n                }}\r\n            >\r\n                {formik => (\r\n                    <Form>\r\n                        <TextField \r\n                            sx={{marginTop: '8px'}}\r\n                            variant=\"outlined\"\r\n                            id=\"first_name\"\r\n                            name=\"first_name\"\r\n                            label=\"First name\"\r\n                            type=\"text\"\r\n                            {...formik.getFieldProps('first_name')}\r\n                        />\r\n                        <ErrorMessage name=\"first_name\" />\r\n\r\n                        <TextField\r\n                            sx={{marginTop: '8px'}}\r\n                            variant=\"outlined\"\r\n                            id=\"last_name\"\r\n                            name=\"last_name\"\r\n                            label=\"Last name\"\r\n                            type=\"text\"\r\n                            {...formik.getFieldProps('last_name')}\r\n                        />\r\n                        <ErrorMessage name=\"last_name\" />\r\n\r\n                        <TextField\r\n                            sx={{marginTop: '8px'}}\r\n                            variant=\"outlined\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            label=\"E-mail\"\r\n                            type=\"email\"\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        <ErrorMessage name=\"email\" />\r\n\r\n                        <TextField\r\n                            sx={{marginTop: '8px'}}\r\n                            variant=\"outlined\"\r\n                            id=\"phone_number\"\r\n                            name=\"phone_number\"\r\n                            label=\"Phone number\"\r\n                            type=\"number\"\r\n                            {...formik.getFieldProps('phone_number')}\r\n                        />\r\n                        <ErrorMessage name=\"phone_number\" />\r\n                        <Button variant=\"contained\" type=\"submit\" sx={{margin: '10px 10px'}} onClick={Formik.handleSubmit}>Confirm changes</Button>\r\n                        <Button variant=\"contained\" type=\"reset\" sx={{margin: '10px 10px'}} onClick={toggleEditProfile}>Cancel</Button> \r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default EditProfileForm;","import React, { useState } from \"react\";\r\n\r\n// mui setup\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst EditProfilePicForm = ({user, toggleEditImage, handleProfilePicUpdate}) => {\r\n    const [profilePic, setProfilePic] = useState(null);\r\n\r\n    const handleChange = (e) => {\r\n        setProfilePic(e.target.files[0]);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n            <Typography variant=\"h5\" sx={{margin: '10px 8px'}}>\r\n                Update profile picture\r\n            </Typography>\r\n            <TextField\r\n                sx={{margin: 8}}\r\n                id=\"new_profile_pic\"\r\n                name=\"new_profile_pic\"\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e)}\r\n            />\r\n            <Button variant=\"contained\" sx={{margin: '10px 10px'}} onClick={handleProfilePicUpdate(profilePic)}>Confirm changes</Button>\r\n            <Button variant=\"contained\" sx={{margin: '10px 10px'}} onClick={toggleEditImage}>Cancel</Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default EditProfilePicForm;","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport NewPostForm from \"../Posts/NewPostForm\";\r\nimport PostContainer from \"../Posts/PostContainer\";\r\nimport axios from \"../../utils/axios\";\r\nimport axiosFns from \"../../utils/axiosFns\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport EditProfileForm from \"./EditProfileForm\";\r\nimport EditProfilePicForm from \"./EditProfilePicForm\";\r\n\r\n// mui setup\r\nimport Container from '@mui/material/Container';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst Profile = ({user, setUser}) => {\r\n    const [relUser, setRelUser] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n    const [loadingPosts, setLoadingPosts] = useState(false);\r\n    const [profileEditing, setProfileEditing] = useState(false);\r\n    const [imageEditing, setImageEditing] = useState(false);\r\n    const [skip, setSkip] = useState(0);\r\n    const { userId } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const {\r\n        getPosts,\r\n        handlePostSend,\r\n        handleLikePost,\r\n        handleCommentSend,\r\n        handleLikeComment,\r\n    } = axiosFns({ posts, setPosts, user, skip, setLoadingPosts });\r\n\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [skip]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n          .get(`/users/${userId}`)\r\n          .then((results) => {\r\n            setRelUser(results.data.user.user);\r\n          })\r\n          .catch((err) => {\r\n            if (err.response.status === 500 || err.response.status === 401) {\r\n              setUser(\"\");\r\n              navigate(\"/login\");\r\n            }\r\n          });\r\n    }, [user]);\r\n\r\n    const handleFriendReq = (targetUserId) => {\r\n        axios\r\n        .post(`/users/req`, {target_userId : targetUserId})\r\n        .then((results) => {\r\n            axios\r\n            .get(`/users/${userId}`)\r\n            .then((results) => {\r\n                setRelUser(results.data.user.user);\r\n            });\r\n        });\r\n    };\r\n\r\n    const handleProfileUpdate = (info) => {\r\n        axios\r\n        .put(`/users/${user.id}`, info)\r\n        .then((results) => {\r\n            const updatedUser = {\r\n                first_name: results.data.user.first_name,\r\n                last_name: results.data.user.last_name,\r\n                email: results.data.user.email,\r\n                phone_number: results.data.user.phone_number,\r\n                id: results.data.user._id,\r\n                token: results.data.token.token,\r\n                profile_pic: results.data.user.profile_pic,\r\n            };\r\n            setUser(updatedUser);\r\n            setRelUser(results.data.user.user);\r\n            axios.defaults.headers.common[\"Authorization\"] = results.data.token.token;\r\n        });\r\n    };\r\n\r\n    const handleProfilePicUpdate = (profilePic) => {\r\n        const formData = new FormData();\r\n        formData.append('new_profile_pic', profilePic);\r\n        axios\r\n        .post(`/users/${user.id}/profilepic`, formData, {})\r\n        .then((results) => {\r\n            const updatedUser = {\r\n                first_name: results.data.user.user.first_name,\r\n                last_name: results.data.user.user.last_name,\r\n                email: results.data.user.user.email,\r\n                phone_number: results.data.user.user.phone_number,\r\n                id: results.data.user.user._id,\r\n                token: results.data.token.token,\r\n                profile_pic: results.data.user.user.profile_pic,\r\n            };\r\n            setUser(updatedUser);\r\n            setRelUser(results.data.user.user);\r\n            toggleEditImage();\r\n        });\r\n    };\r\n\r\n    const toggleEditProfile = () => {\r\n        setProfileEditing(!profileEditing);\r\n    };\r\n\r\n    const toggleEditImage = () => {\r\n        setImageEditing(!imageEditing);\r\n    };\r\n\r\n    const handleScroll = (e) => {\r\n        const bottom =\r\n          e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight;\r\n        if (bottom) {\r\n          setSkip(posts.length);\r\n        }\r\n    };\r\n\r\n    if (!relUser) {\r\n        return(\r\n            <div>\r\n                Loading...\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Container maxWidth='x1' sx={{minHeight: '100vh', marginTop: '10px'}}>\r\n            <Grid container spacing={3} sx={{justifyContent: 'center'}}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Paper sx={{textAlign: 'center', margin: '0 5px 20px 5px'}}>\r\n                        {profileEditing ? (\r\n                            <EditProfileForm\r\n                                user={relUser}\r\n                                toggleEditProfile={toggleEditProfile}\r\n                                handleProfileUpdate={handleProfileUpdate}\r\n                            />\r\n                        ) : imageEditing ? (\r\n                            <EditProfilePicForm\r\n                                user={relUser}\r\n                                toggleEditImage={toggleEditImage}\r\n                                handleProfilePicUpdate={handleProfilePicUpdate}\r\n                            />\r\n                        ) : (\r\n                            <UserInfo\r\n                                user={relUser}\r\n                                loggedUser={user}\r\n                                handleFriendReq={handleFriendReq}\r\n                                toggleEditProfile={toggleEditProfile}\r\n                                toggleEditImage={toggleEditImage}\r\n                            />\r\n                        )}\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid container spacing={3} sx={{justifyContent: 'center'}}>\r\n                    <Grid item xs={12} md={6}>\r\n                        {relUser._id === user.id ? (\r\n                            <Paper sx={{textAlign: 'center', margin: '0 5px 20px 5px'}}>\r\n                                <NewPostForm\r\n                                    user={relUser}\r\n                                    handlePostSend={handlePostSend}\r\n                                />\r\n                            </Paper>\r\n                        ) : null}\r\n                        <PostContainer\r\n                            user={relUser}\r\n                            posts={posts.filter((post) => post.post_author._id === relUser._id)}\r\n                            handleCommentSend={handleCommentSend}\r\n                            handleLikePost={handleLikePost}\r\n                            handleLikeComment={handleLikeComment}\r\n                            handleScroll={handleScroll}\r\n                            loadingPosts={loadingPosts}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { useState } from \"react\";\r\nimport axios from \"./utils/axios\";\r\n\r\nfunction useLocalStorage(key, value) {\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        try {\r\n            const item = window.localStorage.getItem(key);\r\n            if (key === 'user' && item) {\r\n                // set axios auth header\r\n                axios.defaults.headers.common[\"Authorization\"] = JSON.parse(item).token;\r\n            }\r\n            return item ? JSON.parse(item) : value;\r\n        } catch(error) {    \r\n            console.log(error);\r\n            return value;\r\n        }\r\n    });\r\n\r\n    // a wrapped version of setStoredValue\r\n    const setValue = (value) => {\r\n        try{\r\n            // enables functions to be stored as value for APIs\r\n            const toStore = value instanceof Function ? value(storedValue) : value;\r\n            setStoredValue(toStore);\r\n            window.localStorage.setItem(key, JSON.stringify(toStore));    \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return [storedValue, setValue];\r\n}\r\n\r\nexport default useLocalStorage;","import React from \"react\";\r\nimport { Routes, Route} from \"react-router-dom\";\r\nimport Account from './components/Account/Account';\r\nimport Dashboard from \"./components/Dashboard/Dashboard\";\r\nimport Friends from './components/Friends/Friends';\r\nimport Login from './components/Login/Login';\r\nimport NavBar from './components/NavBar/NavBar';\r\nimport Profile from './components/Profile/Profile';\r\nimport './App.css';\r\nimport useLocalStorage from './useLocalStorage';\r\n\r\n// mui setup\r\nimport Typography from '@mui/material/Typography';\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      Copyright © 69\r\n    </Typography>\r\n  )\r\n};\r\n\r\nfunction App() {\r\n  const [user, setUser] = useLocalStorage(\"user\", \"\");\r\n\r\n  return (\r\n    <div>\r\n      <NavBar user={user} setUser={setUser}/>\r\n      <Routes>\r\n          <Route exact path='/login' element={<Login user={user} setUser={setUser} />}/>\r\n          <Route exact path='/account' element={<Account user={user} setUser={setUser}/>} />\r\n          <Route exact path='/friends' element={<Friends user={user} />} />\r\n          <Route exact path='/users/:userId' element={<Profile user={user} setUser={setUser} />} />\r\n          <Route exact path=\"/\" element={<Dashboard user={user} setUser={setUser}/> } />\r\n      </Routes>\r\n      <Copyright sx={{ mt: 5 }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nrequire('dotenv').config();\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/odinbook-frontend\">\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}